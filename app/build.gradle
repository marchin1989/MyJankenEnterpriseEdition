/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'war'
    id 'org.owasp.dependencycheck' version '6.0.3'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Template engine
    implementation 'org.apache.velocity:velocity:1.7'
    // Velocity が依存する commons-collections:3.2.1 から明示的にバージョンアップ (CVE-2015-6420, CVE-2017-15708 の対応)
    implementation 'commons-collections:commons-collections:3.2.2'

    // Web
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    // MySQL
    implementation 'mysql:mysql-connector-java:8.0.22'

    // Development tools
    def lombokVersion = '1.18.16'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Use JUnit Jupiter API for testing.
    def junitVersion = '5.6.2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation 'com.tngtech.archunit:archunit-junit5:0.14.1'

    // Heroku
    compile 'com.github.jsimone:webapp-runner:9.0.27.1'
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.janken.JankenCLIApplication'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

run {
    standardInput = System.in
}

jar {
    // 依存関係を含む JAR ファイルをビルドする設定
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }

    manifest {
        attributes 'Main-Class': application.mainClass.orNull
    }
}

dependencyCheck {
    failBuildOnCVSS = 7.0F
}

// 以下、Herokuの設定
// 参考: https://devcenter.heroku.com/articles/deploying-gradle-apps-on-heroku
task stage() {
    dependsOn clean, war
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)
